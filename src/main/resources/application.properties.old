server.port=8080
spring.ai.openai.api-key=${OPENAI_API_KEY}
spring.ai.openai.chat.options.model=gpt-4o-mini

spring.ai.vectorstore.pgvector.initialize-schema=true
spring.ai.vectorstore.pgvector.table-name=rag_chunks
spring.ai.vectorstore.pgvector.dimensions=1536
spring.datasource.url=jdbc:postgresql://localhost:5432/rag
spring.datasource.username=rag
spring.datasource.password=rag
spring.datasource.hikari.maximum-pool-size=5

# Azure AI Search loader (optional)
search.endpoint=${SEARCH_ENDPOINT:}
search.index=${SEARCH_INDEX:sanctions-demo}
search.api.key=${SEARCH_API_KEY:}

# LangChain4j (Azure OpenAI) envs
# AZURE_OPENAI_ENDPOINT=https://<aoai>.openai.azure.com
# AZURE_OPENAI_API_KEY=<key>
# AZURE_OPENAI_DEPLOYMENT=gpt-4o-mini

# Azure Document Intelligence
# AI_DOCINT_ENDPOINT=https://<docintel>.cognitiveservices.azure.com

# Azure Search (already above): SEARCH_ENDPOINT, SEARCH_API_KEY, SEARCH_INDEX
# Azure OpenAI (LangChain4j): AZURE_OPENAI_ENDPOINT, AZURE_OPENAI_API_KEY, AZURE_OPENAI_DEPLOYMENT, AZURE_OPENAI_EMBEDDING

# Embeddings (for hybrid search)
spring.ai.openai.embedding.options.model=text-embedding-3-small
